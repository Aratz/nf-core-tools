name: Python tests
# This workflow is triggered on pushes and PRs to the repository.
# Only run if we changed a Python file
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  select-strategy:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ steps.set-matrix.outputs.python-versions }}
    steps:
      - id: set-matrix
        run: |
          if [ ${{ github.event_name }} == "release" ]; then
            echo "::set-output name=python-versions::[\"3.7\",\"3.8\",\"3.9\",\"3.10\",\"3.11\"]"
          else
            echo "::set-output name=python-versions::[\"3.7\",\"3.11\"]"
          fi
  pytest:
    needs: select-strategy
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.select-strategy.outputs.python-versions) }}
        os: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        name: Check out source-code repository

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip -r requirements-dev.txt
          pip install -e .

      - name: Use latest version of git wrt. the Ubuntu image in use
        run: |
          sudo apt remove git git-man
          sudo add-apt-repository --remove ppa:git-core/ppa
          sudo apt install git

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "latest-everything"

      - name: Test with pytest
        run: python3 -m pytest tests/ --color=yes --cov-report=xml --cov-config=.github/.coveragerc --cov=nf_core

      - uses: codecov/codecov-action@v1
        name: Upload code coverage report
        with:
          if: success()
          token: ${{ secrets.CODECOV_TOKEN }}
